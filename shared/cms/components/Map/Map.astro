---
import { RouteMap } from '@shared/sections/maps/RouteMap'
import { RoutesegmentMap } from '@shared/sections/maps/RoutesegmentMap'
import { SimpleMap } from '@shared/sections/maps/SimpleMap'

import { getCollection, getEntry, type CollectionEntry } from 'astro:content'

const { type } = Astro.props

export type Segmentdetail = CollectionEntry<'routesegmentdetails'>

const routesegments = await getCollection('routesegments')
const routesegmentDetails = await getCollection('routesegmentdetails')
const homepage = await getEntry('homepage', 'index')
---

<div class="not-prose">
  {
    type.discriminant === 'routesegmentmap' && (
      <RoutesegmentMap
        routesegments={routesegments}
        segmentFocusSlug={type.value}
        routesegmentDetails={routesegmentDetails
          .filter((detail) => detail.data.route === type.value)
          .sort((a, b) => a.data.position - b.data.position)}
        client:load
      />
    )
  }

  {type.discriminant === 'routemap' && <RouteMap routesegments={routesegments} client:load />}
  {type.discriminant === 'basic' && <SimpleMap label={homepage?.data.title || ''} client:load />}
</div>
